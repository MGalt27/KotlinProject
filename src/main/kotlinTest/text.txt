Запись занятия
№1
Если мы перечислим все натуральные числа до 10, кратные 3 или 5, мы получим 3, 5, 6 и 9. Сумма этих кратных равна 23.
Завершите решение так, чтобы оно возвращало сумму всех чисел, кратных 3 или 5, меньше переданного числа. Кроме того, если число отрицательное, верните 0.
Примечание. Если число кратно и 3, и 5, считайте его только один раз.

№2
Создайте метод/функцию, чтобы она преобразовывала слова, разделенные тире/подчеркиванием, в верблюжий регистр .
Первое слово в выводе должно
быть написано с заглавной буквы только в том случае, если исходное слово было написано с заглавной буквы
(известный как верхний верблюжий регистр, также часто называемый регистром Паскаля).
Следующие слова всегда должны быть написаны с большой буквы.

Примеры
"the-stealth-warrior"превращается в"theStealthWarrior"

"The_Stealth_Warrior"превращается в"TheStealthWarrior"

превращается в"TheStealthWarrior"

№3
Супер интересная в плане алгоритма
Учитывая 4 целых числа, a, b, c, dмы образуем сумму квадратов aи , b а затем сумму квадратов cи d. Мы умножаем две суммы,
следовательно, получаем число n, и пытаемся разложить nна сумму двух квадратов eи f(целые числа e и f >= 0), чтобы n = e² + f².

Более того: e и f должны возникать только из сумм (или разностей) произведений между, с одной стороны (a, b)и с
другой стороны (c, d), каждым из a, b, c, d взятых только один раз. Например, prod2sum(1, 2, 1, 3) должен возвращать [[1, 7], [5, 5]]),
потому что

1==1*3-1*2
7==2*3+1*1
5==1*2+1*3
Допустим, у нас есть a = 1, b = 2, c = 1, d = 3. Сначала вычисляем суммы 1² + 2² = 5 and 1² + 3² = 10отсюда n = 50.

50 = 1² + 7² or 50 = 7² + 1²(будем считать, что эти два решения одинаковы) или 50 = 5² + 5².

Возвратом нашей функции будет массив подмассивов (в C массив пар), отсортированных по первым элементам подмассивов.
В каждом подмассиве нижний элемент должен быть первым.

prod2sum(1, 2, 1, 3) should return [[1, 7], [5, 5]]

prod2sum(2, 3, 4, 5) should return  [[2, 23], [7, 22]]

потому что(2² + 3²) * (4² + 5²) = 533 = (7² + 22²) = (23² + 2²)

prod2sum(1, 2, 2, 3) should return  [[1, 8], [4, 7]]

prod2sum(1, 1, 3, 5) should return  [[2, 8]](не всегда есть 2 решения)



1234

12 34
13 24
